{"ast":null,"code":"import axios from 'axios';\nexport const fetchAllData = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'DATA_REQUEST'\n    });\n    const {\n      data\n    } = await axios.get(\"https://api.quicksell.co/v1/internal/frontend-assignment/\");\n    dispatch({\n      type: 'DATA_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'DATA_FAILURE'\n    });\n  }\n};\nexport const selectData = (group, allTickets, orderValue) => async dispatch => {\n  try {\n    dispatch({\n      type: 'SELECT_DATA_REQUEST'\n    });\n    let user = false;\n    let mySet = new Set();\n    let arr = [],\n      selectedData = [];\n    if (group === 'status') {\n      allTickets.forEach(elem => {\n        mySet.add(elem.status);\n      });\n      arr = [...mySet];\n      arr.forEach((elem, index) => {\n        let arr = allTickets.filter(fElem => {\n          return elem === fElem.status;\n        });\n        selectedData.push({\n          [index]: {\n            title: elem,\n            value: arr\n          }\n        });\n      });\n    } else if (group === 'user') {\n      var _allTickets$allUser;\n      user = true;\n      allTickets === null || allTickets === void 0 ? void 0 : (_allTickets$allUser = allTickets.allUser) === null || _allTickets$allUser === void 0 ? void 0 : _allTickets$allUser.forEach((elem, index) => {\n        var _allTickets$allTicket;\n        arr = allTickets === null || allTickets === void 0 ? void 0 : (_allTickets$allTicket = allTickets.allTickets) === null || _allTickets$allTicket === void 0 ? void 0 : _allTickets$allTicket.filter(Felem => {\n          return elem.id === Felem.userId;\n        });\n        selectedData.push({\n          [index]: {\n            title: elem.name,\n            value: arr\n          }\n        });\n      });\n    } else {\n      let prior_list = [\"No priority\", \"Low\", \"Medium\", \"High\", \"Urgent\"];\n      prior_list.forEach((elem, index) => {\n        arr = allTickets.filter(fElem => {\n          return index === fElem.priority;\n        });\n        selectedData.push({\n          [index]: {\n            title: elem,\n            value: arr\n          }\n        });\n      });\n    }\n    if (orderValue === \"title\") {\n      selectedData.forEach((elem, index) => {\n        var _elem$index, _elem$index$value;\n        (_elem$index = elem[index]) === null || _elem$index === void 0 ? void 0 : (_elem$index$value = _elem$index.value) === null || _elem$index$value === void 0 ? void 0 : _elem$index$value.sort((a, b) => a.title.localeCompare(b.title));\n      });\n    }\n    if (orderValue === \"priority\") {\n      selectedData.forEach((elem, index) => {\n        var _elem$index2, _elem$index2$value;\n        (_elem$index2 = elem[index]) === null || _elem$index2 === void 0 ? void 0 : (_elem$index2$value = _elem$index2.value) === null || _elem$index2$value === void 0 ? void 0 : _elem$index2$value.sort((a, b) => b.priority - a.priority);\n      });\n    }\n    dispatch({\n      type: 'SELECT_DATA_SUCCESS',\n      payload: {\n        selectedData,\n        user\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: 'SELECT_DATA_FAILURE',\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","fetchAllData","dispatch","type","data","get","payload","error","selectData","group","allTickets","orderValue","user","mySet","Set","arr","selectedData","forEach","elem","add","status","index","filter","fElem","push","title","value","_allTickets$allUser","allUser","_allTickets$allTicket","Felem","id","userId","name","prior_list","priority","_elem$index","_elem$index$value","sort","a","b","localeCompare","_elem$index2","_elem$index2$value","message"],"sources":["C:/Users/shash/OneDrive/Desktop/QuickSell-Assignment/src/Actions/DataAction.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const fetchAllData = () => async (dispatch) =>{\r\n    try {\r\n        dispatch({type : 'DATA_REQUEST'})\r\n    \r\n        const {data} = await axios.get(\"https://api.quicksell.co/v1/internal/frontend-assignment/\");\r\n\r\n        dispatch({type : 'DATA_SUCCESS', payload : data});\r\n\r\n    } catch (error) {\r\n        dispatch({type : 'DATA_FAILURE'})\r\n    }\r\n}\r\n\r\nexport const selectData = (group, allTickets, orderValue) => async (dispatch) =>{\r\n    try {\r\n        dispatch({type : 'SELECT_DATA_REQUEST'})\r\n\r\n        let user = false;\r\n        let mySet = new Set();\r\n        let arr = [], selectedData = [];\r\n\r\n        if(group === 'status'){\r\n            allTickets.forEach((elem) => {\r\n                mySet.add(elem.status);\r\n            })\r\n    \r\n            arr = [...mySet];\r\n    \r\n            arr.forEach((elem, index) => {\r\n                let arr = allTickets.filter((fElem) => {\r\n                    return elem === fElem.status;\r\n                })\r\n                selectedData.push({\r\n                    [index] : {\r\n                        title : elem,\r\n                        value : arr\r\n                    }\r\n                })\r\n            })\r\n        }else if(group === 'user'){\r\n            user = true;\r\n            allTickets?.allUser?.forEach((elem, index) => {\r\n                arr = allTickets?.allTickets?.filter((Felem) => {\r\n                    return elem.id === Felem.userId;\r\n                })\r\n\r\n                selectedData.push({\r\n                    [index] : {\r\n                        title : elem.name,\r\n                        value : arr\r\n                    }\r\n                })\r\n            })\r\n        }else{\r\n            let prior_list = [\"No priority\", \"Low\", \"Medium\", \"High\", \"Urgent\"];\r\n\r\n            prior_list.forEach((elem, index) => {\r\n                arr = allTickets.filter((fElem) => {\r\n                    return index === fElem.priority;\r\n                })\r\n\r\n                selectedData.push({\r\n                    [index] : {\r\n                        title : elem,\r\n                        value : arr\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n        if(orderValue === \"title\"){\r\n            selectedData.forEach((elem, index) => {\r\n                elem[index]?.value?.sort((a, b) => a.title.localeCompare(b.title))\r\n            })\r\n        }\r\n\r\n        if(orderValue === \"priority\"){\r\n            selectedData.forEach((elem, index) => {\r\n                elem[index]?.value?.sort((a, b) => b.priority - a.priority)\r\n            })\r\n        }\r\n        \r\n        dispatch({type : 'SELECT_DATA_SUCCESS', payload : {selectedData, user}});\r\n\r\n    } catch (error) {\r\n        dispatch({type : 'SELECT_DATA_FAILURE', payload : error.message})\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}